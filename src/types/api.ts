// NOTE: This file is generated by running `yarn generate:types`.
// DO NOT add types to this file manually.
export type Maybe<T> = T | null;
export type Exact<T extends { [key: string]: unknown }> = {
  [K in keyof T]: T[K];
};
export type MakeOptional<T, K extends keyof T> = Omit<T, K> &
  { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> &
  { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
};

export type GitaChapterModel = {
  readonly __typename?: 'GitaChapterModel';
  readonly id: Scalars['ID'];
  readonly name?: Maybe<Scalars['String']>;
  readonly slug?: Maybe<Scalars['String']>;
  readonly nameTransliterated?: Maybe<Scalars['String']>;
  readonly nameTranslated?: Maybe<Scalars['String']>;
  readonly versesCount?: Maybe<Scalars['Int']>;
  readonly chapterNumber?: Maybe<Scalars['Int']>;
  readonly nameMeaning?: Maybe<Scalars['String']>;
  readonly chapterSummary?: Maybe<Scalars['String']>;
  readonly verses?: Maybe<ReadonlyArray<Maybe<GitaVerseModel>>>;
};

export type GitaChapterModelVersesArgs = {
  verseNumber?: Maybe<Scalars['Int']>;
  limit?: Maybe<Scalars['Int']>;
  first?: Maybe<Scalars['Int']>;
  skip?: Maybe<Scalars['Int']>;
};

export type GitaCommentryModel = {
  readonly __typename?: 'GitaCommentryModel';
  readonly id: Scalars['ID'];
  readonly description?: Maybe<Scalars['String']>;
  readonly authorName?: Maybe<Scalars['String']>;
  readonly language?: Maybe<Scalars['String']>;
  readonly verseId?: Maybe<Scalars['Int']>;
  readonly authorId?: Maybe<Scalars['Int']>;
  readonly languageId?: Maybe<Scalars['Int']>;
  readonly gitaVerses?: Maybe<GitaVerseModel>;
};

export type GitaTranslationModel = {
  readonly __typename?: 'GitaTranslationModel';
  readonly id: Scalars['ID'];
  readonly description?: Maybe<Scalars['String']>;
  readonly authorName?: Maybe<Scalars['String']>;
  readonly language?: Maybe<Scalars['String']>;
  readonly verseId?: Maybe<Scalars['Int']>;
  readonly authorId?: Maybe<Scalars['Int']>;
  readonly languageId?: Maybe<Scalars['Int']>;
  readonly gitaVerses?: Maybe<GitaVerseModel>;
};

export type GitaVerseModel = {
  readonly __typename?: 'GitaVerseModel';
  readonly id: Scalars['ID'];
  readonly slug?: Maybe<Scalars['String']>;
  readonly verseNumber?: Maybe<Scalars['Int']>;
  readonly chapterNumber?: Maybe<Scalars['Int']>;
  readonly text?: Maybe<Scalars['String']>;
  readonly chapterId?: Maybe<Scalars['Int']>;
  readonly gitaChapters?: Maybe<GitaChapterModel>;
  readonly translations?: Maybe<ReadonlyArray<Maybe<GitaTranslationModel>>>;
  readonly commentaries?: Maybe<ReadonlyArray<Maybe<GitaCommentryModel>>>;
};

export type GitaVerseModelTranslationsArgs = {
  authorName?: Maybe<Scalars['String']>;
  language?: Maybe<Scalars['String']>;
  limit?: Maybe<Scalars['Int']>;
  first?: Maybe<Scalars['Int']>;
  skip?: Maybe<Scalars['Int']>;
};

export type GitaVerseModelCommentariesArgs = {
  authorName?: Maybe<Scalars['String']>;
  language?: Maybe<Scalars['String']>;
  limit?: Maybe<Scalars['Int']>;
  first?: Maybe<Scalars['Int']>;
  skip?: Maybe<Scalars['Int']>;
};

export type Query = {
  readonly __typename?: 'Query';
  readonly chapters?: Maybe<ReadonlyArray<Maybe<GitaChapterModel>>>;
  readonly verses?: Maybe<ReadonlyArray<Maybe<GitaVerseModel>>>;
};

export type QueryChaptersArgs = {
  chapterNumber?: Maybe<Scalars['Int']>;
  limit?: Maybe<Scalars['Int']>;
  first?: Maybe<Scalars['Int']>;
  skip?: Maybe<Scalars['Int']>;
};

export type QueryVersesArgs = {
  verseNumber?: Maybe<Scalars['Int']>;
  verseOrder?: Maybe<Scalars['Int']>;
  limit?: Maybe<Scalars['Int']>;
  first?: Maybe<Scalars['Int']>;
  skip?: Maybe<Scalars['Int']>;
};
