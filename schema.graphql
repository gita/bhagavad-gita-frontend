schema {
  query: Query
}
type GitaChapterModel {
  id: ID!
  name: String
  nameTransliterated: String
  nameTranslated: String
  versesCount: Int
  chapterNumber: Int
  nameMeaning: String
  chapterSummary: String
  verses(verseNumber: Int, limit: Int, first: Int, skip: Int): [GitaVerseModel]
}
type GitaCommentryModel {
  id: ID!
  description: String
  authorName: String
  language: String
  verseId: Int
  authorId: Int
  languageId: Int
  gitaVerses: GitaVerseModel
}
type GitaTranslationModel {
  id: ID!
  description: String
  authorName: String
  language: String
  verseId: Int
  authorId: Int
  languageId: Int
  gitaVerses: GitaVerseModel
}
type GitaVerseModel {
  id: ID!
  verseNumber: Int
  chapterNumber: Int
  text: String
  chapterId: Int
  gitaChapters: GitaChapterModel
  translations(
    authorName: String
    language: String
    limit: Int
    first: Int
    skip: Int
  ): [GitaTranslationModel]
  commentaries(
    authorName: String
    language: String
    limit: Int
    first: Int
    skip: Int
  ): [GitaCommentryModel]
}
type Query {
  chapters(
    chapterNumber: Int
    limit: Int
    first: Int
    skip: Int
  ): [GitaChapterModel]
  verses(verseNumber: Int, limit: Int, first: Int, skip: Int): [GitaVerseModel]
}
directive @cacheControl(
  maxAge: Int
  swr: Int
  refetch: Boolean
  scope: String
) on FIELD_DEFINITION | FIELD
